{"version":3,"sources":["components/Searchbar/SearchForm/SearchForm.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageDataView/ImageDataView.module.css","components/ImageGallery/ImageDataView/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImagePending/ImagePending.module.css","components/ImageGallery/ImageGallery.module.css","components/ScrollUp/ScrollUp.module.css","components/Searchbar/Searchbar.module.css","components/Section/Section.module.css","components/ImageGallery/ImageDataView/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageDataView/InfiniteScroll/InfiniteScroll.jsx","components/ImageGallery/ImageDataView/ImageDataView.jsx","components/ImageGallery/ImagePending/ImagePending.jsx","services/imagesApi.js","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/ScrollUp/ScrollUp.jsx","components/Searchbar/SearchForm/SearchForm.jsx","components/Searchbar/Searchbar.jsx","components/Section/Section.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ImageGalleryItem","smallImg","largeImg","alt","openModal","onClick","className","s","image","src","PropTypes","propTypes","string","isRequired","func","InfiniteScrl","imagesArray","loadMore","dataLength","length","next","hasMore","ImageDataView","gallery","map","id","webformatURL","largeImageURL","tags","galleryItem","ImagePending","loader","type","color","height","width","timeout","Component","BASE_URL","KEY","name","page","a","searchParams","URLSearchParams","q","per_page","image_type","orientation","url","axios","get","response","data","result","console","log","alert","Status","ImageGallery","state","status","updatePage","setState","prevState","prevProps","prevName","imageName","nextName","this","props","prevPage","nextPage","fetchImages","then","images","newImagesArray","hits","totalImages","totalHits","toast","success","warning","error","enterData","modalRoot","document","querySelector","Modal","onKeyDown","evt","code","onClose","onBackdropClick","currentTarget","target","window","addEventListener","removeEventListener","modalImg","createPortal","overlay","buttonClose","style","modal","ScrollUp","showUnder","duration","right","bottom","toTop","SearchForm","onNameChange","value","toLowerCase","onSubmit","preventDefault","trim","searchForm","autoComplete","input","autoFocus","placeholder","onChange","button","searchIcon","SearchBar","searchbar","Section","children","section","App","showModal","onFormSubmit","toggleModal","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2989f8c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__vgg45\",\"input\":\"SearchForm_input__23yHf\",\"button\":\"SearchForm_button__1Re_y\",\"label\":\"SearchForm_label__3w7w_\",\"searchIcon\":\"SearchForm_searchIcon__3lbM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__B1Xay\",\"modal\":\"Modal_modal__35upx\",\"buttonClose\":\"Modal_buttonClose__2EvTQ\",\"iconClose\":\"Modal_iconClose__3MZ35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageDataView_gallery__12_82\",\"galleryItem\":\"ImageDataView_galleryItem__prGN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__2Ooha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"ImagePending_loader__2CdD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enterData\":\"ImageGallery_enterData__3mYxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toTop\":\"ScrollUp_toTop__3CH6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3LNNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1C1Yp\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  smallImg,\n  largeImg,\n  alt,\n  openModal,\n}) {\n  return (\n    <img\n      onClick={() => openModal(largeImg, alt)}\n      className={s.image}\n      src={smallImg}\n      alt={alt}\n    />\n  );\n}\n\nPropTypes.propTypes = {\n  smallImg: PropTypes.string.isRequired,\n  largeImg: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nexport default function InfiniteScrl({ imagesArray, loadMore }) {\n  return (\n    <InfiniteScroll\n      dataLength={imagesArray.length}\n      next={loadMore}\n      hasMore={true}\n    />\n  );\n}\n\nInfiniteScrl.propTypes = {\n  imagesArray: PropTypes.array.isRequired,\n  loadMore: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport InfiniteScrl from './InfiniteScroll';\nimport s from './ImageDataView.module.css';\n\nexport default function ImageDataView({ imagesArray, openModal, loadMore }) {\n  return (\n    <>\n      <ul className={s.gallery}>\n        {imagesArray.map(({ id, webformatURL, largeImageURL, tags }) => (\n          <li key={id} className={s.galleryItem}>\n            <ImageGalleryItem\n              smallImg={webformatURL}\n              largeImg={largeImageURL}\n              alt={tags}\n              openModal={openModal}\n            />\n          </li>\n        ))}\n      </ul>\n      <InfiniteScrl imagesArray={imagesArray} loadMore={loadMore} />\n    </>\n  );\n}\n\nImageDataView.propTypes = {\n  imagesArray: PropTypes.array.isRequired,\n  openModal: PropTypes.func.isRequired,\n  loadMore: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport s from './ImagePending.module.css';\n\nexport default class ImagePending extends Component {\n  render() {\n    return (\n      <Loader\n        className={s.loader}\n        type=\"Grid\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    );\n  }\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '23833327-aee66bbf86a23c3fb1d188dcb';\n\nexport async function fetchImages(name, page) {\n  const searchParams = new URLSearchParams({\n    q: name,\n    per_page: 12,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    page: page,\n  });\n\n  let url = `${BASE_URL}?key=${KEY}&${searchParams}`;\n\n  try {\n    const response = await axios.get(url);\n    const result = await response.data;\n    console.log(result);\n    return result;\n  } catch (error) {\n    alert(`Нет картинок по запросу ${name}`);\n  }\n}\n\n// const api = {\n//   fetchImages\n// }\n\n// export default api\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport ImageDataView from './ImageDataView';\nimport ImagePending from './ImagePending';\nimport { fetchImages } from '../../services/imagesApi';\nimport s from './ImageGallery.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class ImageGallery extends Component {\n  state = {\n    imagesArray: [],\n    page: 1,\n    status: Status.IDLE,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevName !== nextName) {\n      this.setState({ imagesArray: [] });\n    }\n\n    if (prevName !== nextName || prevPage !== nextPage) {\n      this.setState({ status: Status.PENDING });\n\n      fetchImages(nextName, nextPage).then(images => {\n        const newImagesArray = images.hits;\n        const totalImages = images.totalHits;\n\n        if (newImagesArray.length === 0 && totalImages === 0) {\n          toast.error('Oops nothing found');\n          return;\n        }\n        if (newImagesArray.length === 0 && totalImages !== 0) {\n          toast.warning('Nothing more found');\n          return;\n        }\n        if (nextPage === 1) {\n          toast.success(`Found ${totalImages} images`);\n        }\n\n        this.setState(({ imagesArray }) => ({\n          imagesArray: [...imagesArray, ...newImagesArray],\n          status: Status.RESOLVED,\n        }));\n      });\n    }\n  }\n\n  updatePage = () => {\n    this.setState(prevState => {\n      return { page: prevState.page + 1 };\n    });\n  };\n\n  render() {\n    const { imagesArray, status } = this.state;\n    const { openModal } = this.props;\n\n    return (\n      <>\n        {status === 'idle' && (\n          <h2 className={s.enterData}>Enter data to search...</h2>\n        )}\n\n        {status === 'pending' && <ImagePending />}\n\n        {(status === 'resolved' || status === 'pending') && (\n          <ImageDataView\n            imagesArray={imagesArray}\n            openModal={openModal}\n            loadMore={this.updatePage}\n          />\n        )}\n\n        {status === 'rejected' && toast.error('Ooops')}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { GrClose } from 'react-icons/gr';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  onKeyDown = evt => {\n    if (evt.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  onBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props.modalImg;\n    return createPortal(\n      <div className={s.overlay} onClick={this.onBackdropClick}>\n        <button\n          type=\"button\"\n          className={s.buttonClose}\n          onClick={() => this.props.onClose()}\n        >\n          <GrClose style={{ color: 'white', width: 30, height: 30 }} />\n        </button>\n        <div className={s.modal}>\n          <img src={src} alt={alt}></img>\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  modalImg: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ScrollToTop from 'react-scroll-up';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './ScrollUp.module.css';\n\nexport default function ScrollUp() {\n  return (\n    <ScrollToTop\n      showUnder={160}\n      duration={500}\n      style={{ right: 60, bottom: 42 }}\n    >\n      <div className={s.toTop}></div>\n    </ScrollToTop>\n  );\n}\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport s from './SearchForm.module.css';\n\nexport default class SearchForm extends Component {\n  state = {\n    imageName: '',\n  };\n\n  onNameChange = evt => {\n    this.setState({ imageName: evt.currentTarget.value.toLowerCase() });\n  };\n\n  onSubmit = evt => {\n    evt.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast.warning('Enter sth');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    const { imageName } = this.state;\n\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={s.searchForm}\n        autoComplete=\"off\"\n      >\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={this.onNameChange}\n        />\n        <button type=\"submit\" className={s.button}>\n          <BiSearchAlt className={s.searchIcon} />\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchForm from './SearchForm';\nimport s from './Searchbar.module.css';\n\nexport default function SearchBar({ onSubmit }) {\n  return (\n    <header className={s.searchbar}>\n      <SearchForm onSubmit={onSubmit} />\n    </header>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ children }) {\n  return <section className={s.section}>{children}</section>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal';\nimport ScrollUp from '../ScrollUp';\nimport Searchbar from '../Searchbar';\nimport Section from '../Section';\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n    showModal: false,\n    modalImg: {\n      src: '',\n      alt: '',\n    },\n  };\n\n  onFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  toggleModal = (src, alt) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      modalImg: {\n        src,\n        alt,\n      },\n    }));\n  };\n\n  render() {\n    const { imageName, showModal, modalImg } = this.state;\n    return (\n      <>\n        <Section>\n          <Searchbar onSubmit={this.onFormSubmit} />\n        </Section>\n        <Section>\n          <ImageGallery imageName={imageName} openModal={this.toggleModal} />\n          <ScrollUp />\n        </Section>\n\n        {showModal && <Modal onClose={this.toggleModal} modalImg={modalImg} />}\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}