{"version":3,"sources":["components/ImageGallery/ImageDataView/ImageDataView.module.css","components/Searchbar/SearchForm/SearchForm.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/ImageGallery/ImageDataView/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImagePending/ImagePending.module.css","components/ScrollUp/ScrollUp.module.css","components/Searchbar/Searchbar.module.css","components/Section/Section.module.css","components/ImageGallery/ImageDataView/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageDataView/InfiniteScroll/InfiniteScroll.jsx","components/ImageGallery/ImageDataView/ImageDataView.jsx","components/ImageGallery/ImagePending/ImagePending.jsx","services/imagesApi.js","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/ScrollUp/ScrollUp.jsx","components/Searchbar/SearchForm/SearchForm.jsx","components/Searchbar/Searchbar.jsx","components/Section/Section.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ImageGalleryItem","smallImg","largeImg","alt","openModal","onClick","className","s","image","src","PropTypes","propTypes","string","isRequired","func","InfiniteScrl","imagesArray","loadMore","dataLength","length","next","hasMore","ImageDataView","gallery","grid","map","id","webformatURL","largeImageURL","tags","item","gridItem","ImagePending","loader","type","color","height","width","timeout","Component","name","page","a","searchParams","URLSearchParams","q","per_page","image_type","orientation","url","fetch","response","json","alert","api","fetchImages","Status","ImageGallery","state","status","nextname","props","imageName","imagesAPI","then","newImages","hits","totalHits","setState","toast","warning","updatePage","prevState","prevProps","prevName","nextName","this","setTimeout","images","totalImages","success","error","catch","enterData","modalRoot","document","querySelector","Modal","onKeyDown","evt","code","onClose","onBackdropClick","currentTarget","target","window","addEventListener","removeEventListener","modalImg","createPortal","overlay","buttonClose","style","modal","ScrollUp","showUnder","duration","right","bottom","toTop","SearchForm","onNameChange","value","toLowerCase","onSubmit","preventDefault","trim","searchForm","button","searchIcon","input","autoComplete","autoFocus","placeholder","onChange","SearchBar","searchbar","Section","children","section","App","showModal","onFormSubmit","toggleModal","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7046c465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageDataView_gallery__12_82\",\"item\":\"ImageDataView_item__2TnC1\",\"grid\":\"ImageDataView_grid__em7dL\",\"gridItem\":\"ImageDataView_gridItem__4RV1V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__vgg45\",\"button\":\"SearchForm_button__1Re_y\",\"searchIcon\":\"SearchForm_searchIcon__3lbM2\",\"input\":\"SearchForm_input__23yHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__B1Xay\",\"modal\":\"Modal_modal__35upx\",\"buttonClose\":\"Modal_buttonClose__2EvTQ\",\"iconClose\":\"Modal_iconClose__3MZ35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enterData\":\"ImageGallery_enterData__3mYxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__2Ooha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"ImagePending_loader__2CdD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toTop\":\"ScrollUp_toTop__3CH6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3LNNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1C1Yp\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  smallImg,\n  largeImg,\n  alt,\n  openModal,\n}) {\n  return (\n    <img\n      onClick={() => openModal(largeImg, alt)}\n      className={s.image}\n      src={smallImg}\n      alt={alt}\n    />\n  );\n}\n\nPropTypes.propTypes = {\n  smallImg: PropTypes.string.isRequired,\n  largeImg: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nexport default function InfiniteScrl({ imagesArray, loadMore }) {\n  return (\n    <InfiniteScroll\n      dataLength={imagesArray.length}\n      next={loadMore}\n      hasMore={true}\n    />\n  );\n}\n\nInfiniteScrl.propTypes = {\n  imagesArray: PropTypes.array.isRequired,\n  loadMore: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\n// import Button from './Button';\nimport InfiniteScrl from './InfiniteScroll';\nimport s from './ImageDataView.module.css';\n\nexport default function ImageDataView({ imagesArray, openModal, loadMore }) {\n  return (\n    <>\n      <ul className={`${s.gallery} ${s.grid}`}>\n        {imagesArray.map(({ id, webformatURL, largeImageURL, tags }) => (\n          <li key={id} className={`${s.item} ${s.gridItem}`}>\n            <ImageGalleryItem\n              smallImg={webformatURL}\n              largeImg={largeImageURL}\n              alt={tags}\n              openModal={openModal}\n            ></ImageGalleryItem>\n          </li>\n        ))}\n      </ul>\n      <InfiniteScrl\n        imagesArray={imagesArray}\n        loadMore={loadMore}\n      ></InfiniteScrl>\n\n      {/* if i wanna use a button instead of infinite scroll */}\n      {/* {imagesArray.length > 1 && <Button onClick={loadMore}></Button>} */}\n    </>\n  );\n}\n\nImageDataView.propTypes = {\n  imagesArray: PropTypes.array.isRequired,\n  openModal: PropTypes.func.isRequired,\n  loadMore: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport s from './ImagePending.module.css';\n\nexport default class ImagePending extends Component {\n  render() {\n    return (\n      <Loader\n        className={s.loader}\n        type=\"Grid\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    );\n  }\n}\n","async function fetchImages(name, page) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const KEY = '23833327-aee66bbf86a23c3fb1d188dcb';\n  const searchParams = new URLSearchParams({\n    q: name,\n    per_page: 12,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    page: page,\n  });\n\n  let url = `${BASE_URL}?key=${KEY}&${searchParams}`;\n\n  try {\n    const response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    alert(`Нет картинок по запросу ${name}`);\n  }\n\n  //? the way to fetch images just by fetch\n  // return fetch('url').then(response => {\n  //   if (response.ok) {\n  //     return response.json();\n  //   }\n  //   return Promise.reject(new Error(`Нет картинок по запросу ${name}`));\n  // });\n  // ?\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport ImageDataView from './ImageDataView';\nimport ImagePending from './ImagePending';\nimport imagesAPI from '../../services/imagesApi';\nimport s from './ImageGallery.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class ImageGallery extends Component {\n  state = {\n    imagesArray: [],\n    page: 1,\n    status: Status.IDLE,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n    const page = this.state.page;\n\n    if (prevName !== nextName) {\n      this.setState({ status: Status.PENDING });\n\n      setTimeout(() => {\n        imagesAPI\n          .fetchImages(nextName, page)\n          .then(images => {\n            const imagesArray = images.hits;\n            const totalImages = images.totalHits;\n\n            if (imagesArray.length === 0 && totalImages === 0) {\n              toast.error('Oops nothing found');\n              return;\n            }\n            if (page === 1) {\n              toast.success(`Found ${totalImages} images`);\n            }\n\n            this.setState({\n              imagesArray: imagesArray,\n              status: Status.RESOLVED,\n            });\n          })\n          .catch(error => this.setState({ error, status: Status.REJECTED }));\n\n        this.updatePage();\n      }, 2000);\n    }\n  }\n\n  loadMore = () => {\n    const nextname = this.props.imageName;\n    const page = this.state.page;\n\n    imagesAPI.fetchImages(nextname, page).then(newImages => {\n      if (newImages.hits.length === 0 && newImages.totalHits !== 0) {\n        toast.warning('Nothing more found');\n        return;\n      }\n\n      this.setState(({ imagesArray }) => ({\n        imagesArray: [...imagesArray, ...newImages.hits],\n        status: Status.RESOLVED,\n      }));\n    });\n\n    this.updatePage();\n  };\n\n  updatePage = () => {\n    this.setState(prevState => {\n      return { page: prevState.page + 1 };\n    });\n  };\n\n  render() {\n    const { imagesArray, status } = this.state;\n    const { openModal } = this.props;\n\n    switch (status) {\n      case 'pending':\n        return <ImagePending />;\n      case 'resolved':\n        return (\n          <ImageDataView\n            imagesArray={imagesArray}\n            openModal={openModal}\n            loadMore={this.loadMore}\n          />\n        );\n      case 'idle':\n        return <h2 className={s.enterData}>Enter data to search...</h2>;\n      case 'rejected':\n        return toast.error('Ooops');\n      default:\n        return <h2 className={s.enterData}>Enter data to search...</h2>;\n    }\n  }\n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { GrClose } from 'react-icons/gr';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  onKeyDown = evt => {\n    if (evt.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  onBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props.modalImg;\n    return createPortal(\n      <div className={s.overlay} onClick={this.onBackdropClick}>\n        <button\n          type=\"button\"\n          className={s.buttonClose}\n          onClick={() => this.props.onClose()}\n        >\n          <GrClose style={{ color: 'white', width: 30, height: 30 }} />\n        </button>\n        <div className={s.modal}>\n          <img src={src} alt={alt}></img>\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  modalImg: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ScrollToTop from 'react-scroll-up';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './ScrollUp.module.css';\n\nexport default function ScrollUp() {\n  return (\n    <ScrollToTop\n      showUnder={160}\n      duration={500}\n      style={{ right: 60, bottom: 42 }}\n    >\n      <div className={s.toTop}></div>\n    </ScrollToTop>\n  );\n}\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport s from './SearchForm.module.css';\n\nexport default class SearchForm extends Component {\n  state = {\n    imageName: '',\n  };\n\n  onNameChange = evt => {\n    this.setState({ imageName: evt.currentTarget.value.toLowerCase() });\n  };\n\n  onSubmit = evt => {\n    evt.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast.warning('Enter sth');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    const { imageName } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit} className={s.searchForm}>\n        <button type=\"submit\" className={s.button}>\n          <BiSearchAlt className={s.searchIcon} />\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={this.onNameChange}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchForm from './SearchForm';\nimport s from './Searchbar.module.css';\n\nexport default function SearchBar({ onSubmit }) {\n  return (\n    <header className={s.searchbar}>\n      <SearchForm onSubmit={onSubmit}></SearchForm>\n    </header>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ children }) {\n  return <section className={s.section}>{children}</section>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal';\nimport ScrollUp from '../ScrollUp';\nimport Searchbar from '../Searchbar';\nimport Section from '../Section';\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n    showModal: false,\n    modalImg: {\n      src: '',\n      alt: '',\n    },\n  };\n\n  onFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  toggleModal = (src, alt) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      modalImg: {\n        src,\n        alt,\n      },\n    }));\n  };\n\n  render() {\n    const { imageName, showModal, modalImg } = this.state;\n    return (\n      <>\n        <Section>\n          <Searchbar onSubmit={this.onFormSubmit} />\n        </Section>\n        <Section>\n          <ImageGallery imageName={imageName} openModal={this.toggleModal} />\n          <ScrollUp></ScrollUp>\n        </Section>\n        {showModal && <Modal onClose={this.toggleModal} modalImg={modalImg} />}\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}